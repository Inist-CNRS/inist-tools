#!/usr/bin/env bash
################################################################################
#
# inist-tools / libs / gource.rc
# 
# Bibliothèque de fonctions de génération d'animation "gource"
#
# @author : INIST-CNRS/DPI
#
################################################################################

# ------------------------------------------------------------------------------
# _it_gource
# ------------------------------------------------------------------------------
function _it_gource {

  # On doit pouvoir trouver ces valeurs dans l'environnement (via un export
  # par exemple)
  # IT_GOURCE_GITURL
  # IT_GOURCE_PROJECTNAME
  # IT_GOURCE_SPRINTNAME
  # IT_GOURCE_SPRINTSTART
  # IT_GOURCE_SPRINTEND
  
  # ~~~~~~~~~~~~~~~~~
  # ~ ALGO SOMMAIRE ~
  # ~~~~~~~~~~~~~~~~~
  #
  # 1] récupérer/vérifier les variables d'environnement
  # 2] lire le fichier de conf qui doit contenir
  #     ･ token utilisateur de la plateforme (vpgithub INIST ou GitHub)
  #     ･ url de l'API du compte permettant de récupérer les repositories
  # 2] extraire la liste des projets à partir des urls renseignés dans
  #    $IT_GOURCE_GITURLS
  # 3] écrire le get-repository-list.js correspondant ou y injecter
  #    les variables du fichier de conf si on compte faire un gource pour tous
  #    les repos du compte
  # 4] appeller libs/gource/gource.sh avec les paramètres pour
  #     ･ puller le repository ou le compte complet
  #     ･ créer l'animation kivabien

  # -----------------------------------------------------
  # Tester les dépendances nécessaires : gource et avconv
  # -----------------------------------------------------
  if ! _it_std_check_command "gource" ; then
    _it_std_consoleMessage "ERROR" "Gource est introuvable ou pas installé. Fin."
    return $FALSE
  fi

  if ! _it_std_check_command "avconv" ; then
    _it_std_consoleMessage "ERROR" "Avconv est introuvable ou pas installé. Fin."
    return $FALSE
  fi

  # --------------------------------------------------------------------
  # Si les arguments sont vides, alors on prend les var. d'environnement
  # --------------------------------------------------------------------

  if [ ! -z "$2" ]; then
    IT_GOURCE_GITURLS="$2"
  fi

  if [ ! -z "$3" ]; then
    IT_GOURCE_SPRINTNAME="$3"
  fi

  if [ ! -z "$4" ]; then
    IT_GOURCE_SPRINTSTART="$4"
  fi

  if [ ! -z "$5" ]; then
    IT_GOURCE_SPRINTEND="$5"
  fi

  if [ -z "$IT_GOURCE_GITURLS" ]; then
    _it_std_consoleMessage "ERROR" "L'URL du (des) dépôt(s) git n'est (ne sont) pas renseigné(s) ('IT_GOURCE_GITURLS'). Vous pouvez (s) positionner en l'exportant. Exemple : « export IT_GOURCE_GITURLS=\"https://url/du/premier/projet\" \"https://url/du/second/projet\" »."
    return $FALSE
  fi

  if [ -z "$IT_GOURCE_SPRINTNAME" ]; then
    _it_std_consoleMessage "ERROR" "Le nom du sprint n'est pas renseigné ('IT_GOURCE_SPRINTNAME'). Vous pouvez le positionner en l'exportant. Exemple : « export IT_GOURCE_SPRINTNAME=\"nom du sprint\" »."
    return $FALSE
  fi

  if [ -z "$IT_GOURCE_SPRINTSTART" ]; then
    _it_std_consoleMessage "ERROR" "La date de début n'est pas renseignée ('IT_GOURCE_SPRINSTART'). Vous pouvez la positionner en l'exportant. Exemple : « export IT_GOURCE_SPRINTSTART=\"2017-01-01\" »."
    return $FALSE
  fi

  if [ -z "$IT_GOURCE_SPRINTEND" ]; then
    _it_std_consoleMessage "ERROR" "La date de fin n'est pas renseignée ('IT_GOURCE_SPRINTEND'). Vous pouvez la positionner en l'exportant. Exemple : « export IT_GOURCE_SPRINTEND=\"2017-03-10\" »."
    return $FALSE
  fi

  if [ -z "$IT_GOURCE_AVATARSDIR" ] || [ ! -d "$IT_GOURCE_AVATARSDIR" ]; then
    IT_GOURCE_AVATARSDIR="/opt/inist-tools/libs/gfx/avatars/"
  fi

  # -----------------
  # Vérifier le dépôt
  # -----------------
  
  case "$1" in
   
    help)
      _it_std_consoleMessage "HELP" "Permet de créer une animation gource à partir d'un ou plusieurs dépôts git."
    ;;
    
    *)
      /opt/inist-tools/tools/gource.sh "$IT_GOURCE_GITURLS" "$IT_GOURCE_SPRINTNAME" "$IT_GOURCE_SPRINTSTART" "$IT_GOURCE_SPRINTEND" "$IT_GOURCE_AVATARSDIR"
    ;;
    
  esac
}

