################################################################################
#
# INIST-TOOLS / network.rc
# 
# Bibliothèque de fonctions réseau
#
# @author : INIST-CNRS/DPI
#
################################################################################

#-------------------------------------------------------------------------------
# Récupère l'adresse IP à l'aidre de la commande "ip a"
#-------------------------------------------------------------------------------
function _it_network_getIP {
  case "$1" in
    eth|ethernet)
      IP_ADDR=$(ip a | grep "eth.$" | cut -d " " -f6 | cut -d "/" -f 1)
    ;;
    wlan|wifi)
      IP_ADDR=$(ip a | grep "wlan.$" | cut -d " " -f6 | cut -d "/" -f 1)
    ;;
  esac
}

#-------------------------------------------------------------------------------
# Vérification de la connectivite internet
# 0 -> connexion filaire INIST
# 1 -> connexion autre
#-------------------------------------------------------------------------------
function _it_network_isInistNetwork {
  # En fonction des distrib, ifconfig n'est pas toujours au même endroit...
  local ifc=$(which ifconfig)
  # On cherche l'IP "type INIST" (mais c'est une plage privée qu'on peut retrouver ailleurs)
  local COUNT=$("$ifc" | grep -i "172.16")
  # On ping vanda (si ça répond pas, c'est qu'on est pas en filaire INIST)
  VANDA=$(ping -c 1 vanda.ads.intra.inist.fr | grep -i "unknown")
  if [ "$COUNT" ] && [ ! $VANDA ]; then
    IS_INIST=0
    return 0
  else
    IS_INIST=1
    return 1
  fi
}

#-------------------------------------------------------------------------------
# Informations Réseau
#-------------------------------------------------------------------------------
function _it_network_info {
  # En fonction des distrib, ifconfig n'est pas toujours au même endroit...
  local ifc=$(which ifconfig)
  # Combien d'interfaces filaires ?
  INFO_NET_ETH_COUNT=$($ifc -s | grep -i "eth" | wc -l)
  # Combien d'interfaces WiFi ?
  INFO_NET_WLAN_COUNT=$($ifc -s | grep -i "wlan" | wc -l)
  # INIST ou pas INIST ?
  if _it_network_isInistNetwork ; then
    INFO_NET_INIST="INIST"
  else
    INFO_NET_INIST="en mobilité"
  fi
  # Wifi ou filaire ?
  if $($ifc | grep -i "wlan") ; then
    INFO_NET_TYPE="wifi"
  else
    INFO_NET_TYPE="ethernet"
  fi

  # Adresse IP
  INFO_NET_IP=$(hostname  -I | cut -f1 -d' ')


  # Affichage des infos
  printf "\n"
  printf "Général\n"

  printf "\n"
  printf "Informations Réseau\n"
  printf "Interface(s) ETH active(s)  :\t$INFO_NET_ETH_COUNT\n"
  printf "Interface(s) WIFI active(s) :\t$INFO_NET_WLAN_COUNT\n"
  printf "Réseau en cours             :\t$INFO_NET_TYPE\n"
  printf "Adresse IP                  :\t$INFO_NET_IP\n"
  printf "Réseau utilisé              :\t$INFO_NET_INIST\n"

  printf "\n"
  printf "Environnement\n"
  printf "Utilisateur courant     : $USER\n"
  printf "Répertoire d'exectution : $CURDIR\n"
}
