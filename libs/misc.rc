#!/usr/bin/env bash
################################################################################
#
# inist-tools / libs / desktop.rc
# 
# Bibliothèque de fonctions de configuration des divers applicatifs
# Debian/Ubuntu hors browsers et environnements de bureau
#
# @author : INIST-CNRS/DPI
#
################################################################################

# ------------------------------------------------------------------------------
# Variables globales
# ------------------------------------------------------------------------------
SUDO=$(which gksudo) || $(which kdesudo) || $(which sudo)

# ------------------------------------------------------------------------------
# APT
# /!\ Ne peut s'executer qu'en root
# ------------------------------------------------------------------------------
function _it_misc_apt_proxy {
  # Root only !
  # Les sous-routines qui doivent être executées en user "root" sont déportées
  # dans des scripts distincts sous /tools
  case "$1" in
  
    on)
      # Vérifier si cet état n'est pas celui en cours
      if _it_std_checkAction "apt" $TRUE ; then
        _it_std_message "INFO" "Configuration de APT pour le proxy INIST"
        # fakeroot "$DIR_TOOLS/apt-proxy-on.sh"
        sudo "$DIR_TOOLS/apt-proxy-on.sh"
        # Si le code de retour > 0, c'est que ça n'a pas fonctionné
        if [ $? -gt 0 ]; then
          _it_std_message "ERROR" "Impossible de modifier la configuration de APT"
        fi
        #
        _it_std_setAction "apt" $TRUE
      fi
    ;;
    
    off)
      # Vérifier si cet état n'est pas celui en cours
      if _it_std_checkAction "apt" $FALSE ; then
        _it_std_message "INFO" "Déconfiguration de APT pour le proxy INIST"
        # fakeroot "$DIR_TOOLS/apt-proxy-off.sh"
        sudo "$DIR_TOOLS/apt-proxy-off.sh"
        # Si le code de retour > 0, c'est que ça n'a pas fonctionné
        if [ $? -gt 0 ]; then
          _it_std_message "ERROR" "Impossible de modifier la configuration de APT"
        fi
        #
        _it_std_setAction "apt" $FALSE
      fi
    ;;
    
    help)
      # Afficher l'aide de la commande
    ;;
    
    status)
      _it_std_getStatus "apt"
    ;;
    
  esac
}

# ------------------------------------------------------------------------------
# WGET
# ------------------------------------------------------------------------------
function _it_misc_wget_proxy {
  WGET=$(which wget)
  if [ -z "$WGET" ]; then
    _it_std_consoleMessage "ERREUR" "wget est introuvable (ou pas installé)"
    return $FALSE
  fi
  
  # On recherche un éventuel .wgetrc pour le backuper
  # if [ -f "$HOME/.wgetrc" ]; then
  #   _it_std_backup "$HOME/.wgetrc"
  # fi
  
  case "$1" in
  
    on)
      # Vérifier si cet état n'est pas celui en cours
      if _it_std_checkAction "wget" $TRUE ; then
        #
        _it_std_setAction "wget" $TRUE
      fi
    ;;
    
    off)
      # Vérifier si cet état n'est pas celui en cours
      if _it_std_checkAction "wget" $FALSE ; then
        #
        _it_std_setAction "wget" $FALSE
      fi
    ;;
    
    help)
      _it_std_consoleMessage "HELP" "Pour activer le proxy INIST pour wget, tapez « inist wget on »"
      _it_std_consoleMessage "HELP" "Pour désactiver le proxy INIST pour wget, tapez « inist wget off »"
    ;;
    
    status)
      _it_std_getStatus "wget"
    ;;
  
  esac
}

# ------------------------------------------------------------------------------
# CURL
# ------------------------------------------------------------------------------
function _it_misc_curl_proxy {
  CURL=$(which curl)
  if [ -z "$CURL" ]; then
    _it_std_consoleMessage "ERREUR" "curl est introuvable (ou pas installé)"
    return $FALSE
  fi

  curlConf="$HOME/.curlrc"
  curlConfBackup="$HOME/.curlrc.backup"
  
  
  case $1 in
  
    on )
      if _it_std_checkAction "curl" $TRUE ; then
        if [ -a "$curlConf" ]; then
          cp "$curlConf" "$curlConfBackup"
        fi
        echo "proxy = $INIST_HTTP_PROXY" > "$curlConf"
        _it_std_setAction "curl" $TRUE
      fi
      
    ;;
    
    off )
      if _it_std_checkAction "curl" $FALSE ; then
        rm "$curlConf"
        if [ -f "$curlConfBackup" ]; then
          cp "$curlConfBackup" "$curlConf"
        fi
        _it_std_setAction "curl" $FALSE
      fi
    ;;
    
    status)
      _it_std_getStatus "curl"
    ;;
    
  esac
  #
  # curl utilise les variables d'environnement
  #
}

# ------------------------------------------------------------------------------
# NPM
# ------------------------------------------------------------------------------
function _it_misc_npm_proxy {
  NPM=$(which npm)
  if [ -z "$NPM" ]; then
    _it_std_consoleMessage "ERREUR" "npm est introuvable (ou pas installé)"
    return $FALSE
  fi
  
  case "$1" in
    
    on)
      # Vérifier si cet état n'est pas celui en cours
      if _it_std_checkAction "npm" $TRUE ; then
        $NPM config set proxy "$INIST_HTTP_PROXY"
        $NPM config set https-proxy "$INIST_HTTPS_PROXY"
        _it_std_consoleMessage "INFO" "npm est paramétré pour le proxy INIST"
        #
        _it_std_setAction "npm" $TRUE
      fi
    ;;
    
    off)
      # Vérifier si cet état n'est pas celui en cours
      if _it_std_checkAction "npm" $FALSE ; then
        $NPM config rm proxy
        $NPM config rm https-proxy
        _it_std_consoleMessage "INFO" "npm n'est plus paramétré pour le proxy INIST"
        #
        _it_std_setAction "npm" $FALSE
      fi
    ;;
    
    help)
      _it_std_consoleMessage "HELP" "Permet de paramétrer le proxy INIST pour npm"
    ;;
    
    status)
      _it_std_getStatus "npm"
    ;;
    
  esac
}


# ------------------------------------------------------------------------------
# INFOS
# ------------------------------------------------------------------------------
function _it_misc_info {
  # Type de plateforme (Ubuntu ? Debian ? Autre ?)
  if cat /etc/issue | grep -i "debian" ; then
    HOST_SYSTEM_LINUX="debian"
  elif cat /etc/issue | grep -i "ubuntu"; then
    HOST_SYSTEM_LINUX="ubuntu"
  else
    HOST_SYSTEM="autre"
  fi
  # Version Linux
  HOST_SYSTEM_VERSION=$(uname -mrs)
}

# ------------------------------------------------------------------------------
# STATUS
# ------------------------------------------------------------------------------
function _it_misc_proxyStatus {
  local countProxyout=$(env | grep -i "proxyout" | wc -l)
  local countAdslProxy=$(env | grep -i "adsl" | wc -l)
  if [ $countProxyout -gt 0 ]; then
    _it_std_consoleMessage "INFO" "L'environnement est paramétré pour utiliser le proxy INIST"
  elif [ $countAdslProxy -gt 0 ]; then
    _it_std_consoleMessage "INFO" "L'environnement est paramétré pour utiliser le proxy ADSL INIST"
  else
    _it_std_consoleMessage "INFO" "L'environnement n'est pas paramétré pour utiliser un des proxies de l'INIST"
  fi
}
