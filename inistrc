################################################################################
#
#   # #   # #  ###  #####     #####  ###   ###  #     ###
#   # ##  # # #       #         #   #   # #   # #    #
#   # # # # #  ###    #   ###   #   #   # #   # #     ### 
#   # #  ## #     #   #         #   #   # #   # #        #
#   # #   # #  ###    #         #    ###   ###  ##### ###
#
# Fichier à sourcer dans l'environnement de travail pour avoir accès aux
# outils « inist-tools ».
#
# @author : INIST-CNRS/DPI
#
################################################################################

#-------------------------------------------------------------------------------
# Environnement
#-------------------------------------------------------------------------------
export PATH="$PATH:/opt/inist-tools"
PID="$$"
PARENT_COMMAND="$(ps -o comm= $PPID)"
MODULE_NAME="INIST-TOOLS"
DIR_MODULE="/opt/inist-tools" # fixé "en dur" en fonction du chemin définitif
DIR_CONF="$DIR_MODULE/conf"
DIR_LIBS="$DIR_MODULE/libs"
DIR_TOOLS="$DIR_MODULE/tools"
DIR_INSTALL="$DIR_MODULE/install"
DIR_ENV="/var/run/inist-tools"

SUDO="$(which sudo) -u root"

# Version en fonction du mode DEV ou DEB
CURDIR=$( cd "$( dirname "$0" )" && pwd )
DIR_IT=$(readlink -f "$CURDIR")
if [ -d "$DIR_IT/.git" ]; then
  MODULE_VERSION=$(cd "$DIR_IT" && git describe --tags)
  MODULE_VERSION_SHORT=$(cd "$DIR_IT" && git describe --tags | cut -d"-" -f1)
elif [ -d "$DIR_MODULE/.git" ]; then
  MODULE_VERSION=$(cd "$DIR_MODULE" && git describe --tags)
  MODULE_VERSION_SHORT=$(cd "$DIR_MODULE" && git describe --tags | cut -d"-" -f1)
elif [ -f "$DIR_MODULE/.version" ]; then
  MODULE_VERSION=$(cat "$DIR_MODULE/.version")
  MODULE_VERSION_SHORT="$MODULE_VERSION"
else
  MODULE_VERSION="inconnue"
  MODULE_VERSION_SHORT="inconnue"
fi

# Détermination du système sur lequel on se trouve...
is_debian=$(cat /etc/issue | grep -i "debian")
is_ubuntu=$(cat /etc/issue | grep -i "ubuntu")

if [ "$is_debian" ]; then
  HOST_SYSTEM="debian"
elif [ "$is_ubuntu" ]; then
  HOST_SYSTEM="ubuntu"
else
  HOST_SYSTEM="autre"
fi
# ...et de sa version précise
HOST_SYSTEM_VERSION=$(uname -mrs)

#-----------------------------------------------------------------------------
# Chargement libs + conf
#-----------------------------------------------------------------------------
if [ -f "$DIR_LIBS/std.rc" ]; then
  # source "$DIR_LIBS/ansicolors.lib.sh"
  source "$DIR_LIBS/ansicolors.rc"
  source "$DIR_LIBS/std.rc"
  source "$DIR_LIBS/autocomplete.rc"
else
  logger -s "[$MODULE_NAME] [ERROR] Impossible de charger la librairie de $MODULE_NAME depuis « $DIR_LIBS ». Fin."
  return 1
fi

if [ -f "$DIR_CONF/inist.conf.sh" ]; then
  source "$DIR_CONF/inist.conf.sh"
else
  logger -s "[$MODULE_NAME] [ERROR] Impossible de charger la configuration de $MODULE_NAME depuis « $DIR_LIBS ». Fin."
  return 1
fi

#-------------------------------------------------------------------------------
# COMMANDE [+option[s]]
#-------------------------------------------------------------------------------

function inist {

  #-----------------------------------------------------------------------------
  # Vérification des dépendances
  #-----------------------------------------------------------------------------
  checkFind=$(_it_std_check_command "find")
  if [ "$checkFind" == "$FALSE" ]; then
    _it_std_message "ERROR" "« find » non trouvé, veuillez l'installer avant de continuer."
    exit $FALSE
  fi

  #-----------------------------------------------------------------------------
  # Gestion des arguments 
  #-----------------------------------------------------------------------------

  # On est poli, on dit bonjour...
  # _it_std_greeting
  # finalement non, dire bonjour à chaque fois, ça saoule...

  # Aucun argument : affichage de l'aide
  if [ "$#" -lt 1 ]; then
    _it_std_consoleMessage "WARNING" "Nombre d'argument incorrect !"
    _it_std_show_help
    return $FALSE
  fi
  
  # ligne commande = arguments de la fonction
  case $1 in

    #---------------------------------------------------------------------------
    # Commande de paramétrage du proxy INIST
    #---------------------------------------------------------------------------
    apt )
      source "$DIR_LIBS/misc.rc"
      _it_misc_apt_proxy "$2"
    ;;
    
    bower )
      source "$DIR_LIBS/bower.rc"
      _it_bower_proxy "$2"
    ;;

    browsers )
      _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      # source "$DIR_LIBS/browsers.rc"
      # _it_browsers_proxy "$2"
    ;;
    
    chrome )
      _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      # source "$DIR_LIBS/browsers.rc"
      # _it_browsers_chrome_proxy "$2"
    ;;
    
    chromium )
      source "$DIR_LIBS/browsers.rc"
      _it_browsers_chromium_proxy "$2"
    ;;

    curl )
      # _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      source "$DIR_LIBS/misc.rc"
      _it_misc_curl_proxy "$2"
    ;;
    
    docker )
      source "$DIR_LIBS/docker.rc"
      _it_docker_proxy "$2"
    ;;

    env )
      source "$DIR_LIBS/inist-proxy.rc"
      _it_inistProxy "$2"
    ;;
    
    firefox )
      _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      # source "$DIR_LIBS/browsers.rc"
      # _it_browsers_firefox_proxy "$2"
    ;;
    
    github )
      _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
    ;;
    
    gnome )
      source "$DIR_LIBS/desktop.rc"
      _it_desktop_gnome_proxy "$2"
    ;;
    
    iceweasel )
      _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      # source "$DIR_LIBS/browsers.rc"
      # _it_browsers_iceweasel_proxy "$2"
    ;;
    
    kde )
      source "$DIR_LIBS/desktop.rc"
      _it_desktop_kde_proxy "$2"
    ;;
    
    npm )
      source "$DIR_LIBS/misc.rc"
      _it_misc_npm_proxy "$2"
    ;;

    shell )
      source "$DIR_LIBS/misc.rc"
      _it_inistProxy "$2"
    ;;
    
    unity )
      source "$DIR_LIBS/desktop.rc"
      _it_desktop_unity_proxy "$2"
    ;;
    
    wget )
      source "$DIR_LIBS/misc.rc"
      _it_misc_wget_proxy "$2"
    ;;
    
    xfce )
      source "$DIR_LIBS/desktop.rc"
      _it_desktop_xfce4_proxy "$2"
    ;;
    
    
    #---------------------------------------------------------------------------
    # COMMANDE : info
    #---------------------------------------------------------------------------
    -i | --info )
      # On charge la lib "network"
      source "$DIR_LIBS/network.rc"
      _it_network_info
      return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # stuff : ranger automatiquement les trucs qui traînent avec un simple
    #         drag-&-drop sur une icône du bureau qui sert de raccourci à
    #         la commande « inist stuff »
    #---------------------------------------------------------------------------
    stuff )
      # source "$DIR_LIBS/stuff.rc"
      # _it_std_message "INFO" "STUFF : rangement..."
      # _it_stuff_tidy "$@"
    ;;

    #---------------------------------------------------------------------------
    # time|date|sync
    #---------------------------------------------------------------------------
    ntp )
      case $2 in
        # Synchro avec serveur ntp de l'INIST
        sync )
          _it_std_consoleMessage "INFO" "Synchronisation de la date/heure..."
          $SUDO "/opt/inist-tools/tools/timesync.sh"
          _it_std_consoleMessage "OK" "Heure synchronisée"
          return $TRUE
        ;;
        * )
          _it_std_consoleMessage "AIDE" "« inist ntp sync » pour synchroniser votre machine avec le serveur NTP de l'INIST"
        ;;
      esac
    ;;

    #---------------------------------------------------------------------------
    # daemon
    #---------------------------------------------------------------------------
    -d | --daemon )
      # source "/opt/inist-tools/libs/daemon.rc"
      # ToDo...
    ;;

    #---------------------------------------------------------------------------
    # power
    #---------------------------------------------------------------------------
    power )
      case "$2" in
        
        save )
          /opt/inist-tools/tools/powersave.sh
          return $TRUE
        ;;
        
        max )
          /opt/inist-tools/tools/powermax.sh
          return $TRUE
        ;;
        
        *)
          _it_std_consoleMessage "WARNING" "L'option « $3 » n'est pas reconnue pour la commande « power »"
          return $FALSE
        ;;
        
      esac
    ;;
    
    powersave )
      /opt/inist-tools/tools/powersave.sh
      return $TRUE
    ;;
    
    powermax )
      /opt/inist-tools/tools/powermax.sh
      return $TRUE
    ;;
    
    #---------------------------------------------------------------------------
    # reload
    #---------------------------------------------------------------------------
    -r | --reload )
      _it_std_consoleMessage "INFO" "Rechargement de INIST-TOOLS"
      source /opt/inist-tools/inistrc
      _it_std_consoleMessage "INFO" "INIST-TOOLS [$MODULE_VERSION] rechargé"
      return $TRUE
    ;;
    
    #---------------------------------------------------------------------------
    # status
    #---------------------------------------------------------------------------
    -s | --status )
      _it_std_consoleMessage "INFO" "Informations sur l'environnement..."
      source /opt/inist-tools/libs/misc.rc
      _it_misc_proxyStatus
      return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # AIDE -- OPTION : -h | --help
    #---------------------------------------------------------------------------
    -h | --help )
      _it_std_show_help
      return $TRUE
    ;;
    
    #---------------------------------------------------------------------------
    # OPTION : --pid
    #---------------------------------------------------------------------------
    --pid )
      echo "$PID"
      return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # OPTION : --version
    #---------------------------------------------------------------------------
    -v | --version )
      cat "$DIR_LIBS/gfx/cnrs.ansi"
      _it_std_show_version
      return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # Options non gérées...
    #---------------------------------------------------------------------------
    * )
      _it_std_consoleMessage "WARNING" "Commande ou option « $1 » inconnue (ou peut-être mal saisie)."
    ;;
    
  esac
}

#-------------------------------------------------------------------------------
# Si la variable d'env it_env_isProxy est positionnée, on répercute son état
#-------------------------------------------------------------------------------
isSystemProxy=$(_it_std_getEnv "system")
if [ "$isSystemProxy" == $TRUE ]; then
  source "$DIR_LIBS/inist-proxy.rc"
  _it_inistProxy "on"
elif [ "$isSystemProxy" == $FALSE ]; then
  source "$DIR_LIBS/inist-proxy.rc"
  _it_inistProxy "off"
else
  # "on" par défaut...
  source "$DIR_LIBS/inist-proxy.rc"
  _it_inistProxy "default"
  # _it_std_consoleMessage "WARNING" "Variable d'environnement vide ou contenant une valeur incohérente ($isSystemProxy)."
fi

#-------------------------------------------------------------------------------
# FIN !
# /!\ NE PAS METTRE D'EXIT #
#-------------------------------------------------------------------------------
