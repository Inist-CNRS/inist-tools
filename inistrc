################################################################################
#
#   # #   # #  ###  #####     #####  ###   ###  #     ###
#   # ##  # # #       #         #   #   # #   # #    #
#   # # # # #  ###    #   ###   #   #   # #   # #     ### 
#   # #  ## #     #   #         #   #   # #   # #        #
#   # #   # #  ###    #         #    ###   ###  ##### ###
#
# Fichier à sourcer dans l'environnement de travail pour avoir accès aux
# outils « inist-tools ».
#
# @author : INIST-CNRS/DPI
#
################################################################################

#-------------------------------------------------------------------------------
# Environnement
#-------------------------------------------------------------------------------
export PATH="$PATH:/opt/inist-tools"
PID="$$"
PARENT_COMMAND="$(ps -o comm= $PPID)"
MODULE_NAME="INIST-TOOLS"
DIR_MODULE="/opt/inist-tools" # fixé "en dur" en fonction du chemin définitif
DIR_CONF="$DIR_MODULE/conf"
DIR_LIBS="$DIR_MODULE/libs"
DIR_TOOLS="$DIR_MODULE/tools"
DIR_INSTALL="$DIR_MODULE/install"
DIR_ENV="$DIR_MODULE/env"

# Version en fonction du mode DEV ou DEB
# CURDIR=$(cd "$(dirname "$PWD")" && pwd)
# CURDIR=$(dirname "$(readlink -f "$0")")
# DIR_IT=$(readlink -f "$CURDIR")
DIR_IT=$(readlink -f "$DIR_MODULE")
if [ -d "$DIR_IT/.git" ]; then
  MODULE_VERSION=$(cd "$DIR_IT" && git describe --tags)
  MODULE_VERSION_SHORT=$(cd "$DIR_IT" && git describe --tags | cut -d"-" -f1)
elif [ -d "$DIR_MODULE/.git" ]; then
  MODULE_VERSION=$(cd "$DIR_MODULE" && git describe --tags)
  MODULE_VERSION_SHORT=$(cd "$DIR_MODULE" && git describe --tags | cut -d"-" -f1)
elif [ -f "$DIR_MODULE/.version" ]; then
  MODULE_VERSION=$(cat "$DIR_MODULE/.version")
  MODULE_VERSION_SHORT="$MODULE_VERSION"
else
  MODULE_VERSION="inconnue"
  MODULE_VERSION_SHORT="inconnue"
fi

#-----------------------------------------------------------------------------
# Chargement libs + conf
#-----------------------------------------------------------------------------
if [ -f "$DIR_LIBS/std.rc" ]; then
  # source "$DIR_LIBS/ansicolors.lib.sh"
  source "$DIR_LIBS/ansicolors.rc"
  source "$DIR_LIBS/std.rc"
  source "$DIR_LIBS/autocomplete.rc"
else
  logger -s "[$MODULE_NAME] [ERROR] Impossible de charger la librairie de $MODULE_NAME depuis « $DIR_LIBS ». Fin."
  return 1
fi

if [ -f "$DIR_CONF/inist.conf.sh" ]; then
  source "$DIR_CONF/inist.conf.sh"
else
  logger -s "[$MODULE_NAME] [ERROR] Impossible de charger la configuration de $MODULE_NAME depuis « $DIR_LIBS ». Fin."
  return 1
fi

#-------------------------------------------------------------------------------
# Utilisateur + Groupe -> environnement pour réutilisation en sudo
#-------------------------------------------------------------------------------
USER_LOGIN=$(who am i | awk '{print $1}' | head -1)
if [ -z "$USER_LOGIN" ]; then
  USER_LOGIN=$(echo $USER);
fi
ID=$(which id)
USER_GROUP=$($ID -g -n "$USER_LOGIN")
# On ne sauvegarde ces infos dans l'environnement de inist-tools que si le 
# user n'est pas root, pour pouvoir l'utiliser à l'avenir dans les scripts
# lancés en tant que root
if [ "$USER_LOGIN" != "root" ]; then
  _it_std_setEnv "USER_LOGIN" "$USER_LOGIN"
  _it_std_setEnv "USER_GROUP" "$USER_GROUP"
  $SUDO "/opt/inist-tools/tools/env-create.sh" "$USER_LOGIN" "$USER_GROUP"
fi

#-------------------------------------------------------------------------------
# Environnement de bureau
#-------------------------------------------------------------------------------
DESKTOPSESSION=$(env | grep "XDG_CURRENT_DESKTOP" | cut -d "=" -f 2)
DESKTOPSESSION=$(echo "$DESKTOPSESSION" | tr '[:upper:]' '[:lower:]')

#-------------------------------------------------------------------------------
# On teste si le contexte demandé est le proxy ADSL
# dans ce cas on bascule 
#-------------------------------------------------------------------------------
IT_PROXY=$(_it_std_getEnv "it_proxy")
if [ $IT_PROXY == -1 ]; then
  _it_std_setEnv "it_proxy" "INIST"
  IT_PROXY="INIST"
fi

case $IT_PROXY in

  ADSL )
    INIST_HTTP_PROXY="$INIST_HTTP_ADSL_PROXY"
    INIST_HTTPS_PROXY="$INIST_HTTPS_ADSL_PROXY"
    INIST_FTP_PROXY="$INIST_FTP_ADSL_PROXY"
    INIST_PROXYPAC="$INIST_ADSL_PROXYPAC"
    INIST_NO_PROXY="localhost,127.0.0.0/8,*.local,172.16.0.0/16"
    INIST_PROXY_ADDRESS="$INIST_ADSL_PROXY_ADDRESS"
    INIST_PROXY_PORT="$INIST_ADSL_PROXY_PORT"
  ;;
  
  INIST )
    INIST_HTTP_PROXY="http://proxyout.inist.fr:8080"
    INIST_HTTPS_PROXY="http://proxyout.inist.fr:8080"
    INIST_FTP_PROXY="http://proxyout.inist.fr:8080"
    INIST_PROXYPAC="http://proxypac.intra.inist.fr/proxy.pac"
    INIST_NO_PROXY="localhost,127.0.0.0/8,*.local,172.16.0.0/16"
    INIST_PROXY_ADDRESS="http://proxyout.inist.fr"
    INIST_PROXY_PORT="8080"
  ;;

esac

#-------------------------------------------------------------------------------
# COMMANDE [+option[s]]
#-------------------------------------------------------------------------------

function inist {

  #-----------------------------------------------------------------------------
  # Vérification des dépendances
  #-----------------------------------------------------------------------------
  checkFind=$(_it_std_check_command "find")
  if [ "$checkFind" == "$FALSE" ]; then
    _it_std_message "ERROR" "« find » non trouvé, veuillez l'installer avant de continuer."
    exit $FALSE
  fi

  #-----------------------------------------------------------------------------
  # Gestion des arguments 
  #-----------------------------------------------------------------------------

  # Aucun argument : affichage de l'aide
  if [ "$#" -lt 1 ]; then
    _it_std_consoleMessage "WARNING" "Nombre d'argument incorrect !"
    _it_std_show_help
    return $FALSE
  fi
  
  # ligne commande = arguments de la fonction
  case $1 in

    #---------------------------------------------------------------------------
    # Commande de paramétrage du proxy INIST
    #---------------------------------------------------------------------------
    apt )
      source "$DIR_LIBS/misc.rc"
      _it_misc_apt_proxy "$2"
    ;;
    
    bower )
      source "$DIR_LIBS/bower.rc"
      _it_bower_proxy "$2"
    ;;

    curl )
      # _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      source "$DIR_LIBS/misc.rc"
      _it_misc_curl_proxy "$2"
    ;;
    
    docker )
      source "$DIR_LIBS/docker.rc"
      case "$2" in
        inst|install)
          _it_docker_install
        ;;
        *)
          _it_docker_proxy "$2"
        ;;
      esac
      
    ;;

    env )
      source "$DIR_LIBS/inist-proxy.rc"
      _it_inistProxy "$2"
    ;;
  
    github )
      # _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      source "$DIR_LIBS/github.rc"
      _it_github_protocol "$2"
    ;;
    
    gnome )
      source "$DIR_LIBS/desktop.rc"
      _it_desktop_gnome_proxy "$2"
    ;;
    
    iceweasel )
      _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      # source "$DIR_LIBS/browsers.rc"
      # _it_browsers_iceweasel_proxy "$2"
    ;;
    
    kde )
      source "$DIR_LIBS/desktop.rc"
      _it_desktop_kde_proxy "$2"
    ;;
    
    npm )
      source "$DIR_LIBS/misc.rc"
      _it_misc_npm_proxy "$2"
    ;;
    
    postfix )
      source "$DIR_LIBS/mail.rc"
      _it_mail_postfix "$2"
    ;;

    shell )
      source "$DIR_LIBS/misc.rc"
      _it_inistProxy "$2"
    ;;

    system )
      source "$DIR_LIBS/misc.rc"
      _it_inistProxy "$2"
    ;;
    
    unity )
      source "$DIR_LIBS/desktop.rc"
      _it_desktop_unity_proxy "$2"
    ;;
    
    wget )
      source "$DIR_LIBS/misc.rc"
      _it_misc_wget_proxy "$2"
    ;;
    
    xfce )
      source "$DIR_LIBS/desktop.rc"
      _it_desktop_xfce4_proxy "$2"
    ;;
    
    #---------------------------------------------------------------------------
    # COMMANDE : desktop
    #---------------------------------------------------------------------------
    desktop )
      
      case "$DESKTOPSESSION" in
      
        gnome | GNOME)
          source "$DIR_LIBS/desktop.rc"
          _it_desktop_gnome_proxy "$2"
        ;;
        
        xfce | XFCE )
          source "$DIR_LIBS/desktop.rc"
          _it_desktop_xfce4_proxy "$2"
        ;;

        kde | KDE )
          source "$DIR_LIBS/desktop.rc"
          _it_desktop_kde_proxy "$2"
        ;;
        
        unity | UNITY )
          source "$DIR_LIBS/desktop.rc"
          _it_desktop_unity_proxy "$2"
        ;;
        
        * )
          _it_std_consoleMessage "WARNING" "Votre environnement de bureau ($DESKTOPSESSION) n'est pas pris en charge."
        ;;
        
      esac

    ;;
    
    #---------------------------------------------------------------------------
    # COMMANDE : info
    #---------------------------------------------------------------------------
    -i | --info )
      # On charge la lib "network"
      source "$DIR_LIBS/network.rc"
      _it_network_info
      return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # stuff : ranger automatiquement les trucs qui traînent avec un simple
    #         drag-&-drop sur une icône du bureau qui sert de raccourci à
    #         la commande « inist stuff »
    #---------------------------------------------------------------------------
    stuff )
      _it_std_consoleMessage "WARNING" "Cette commande n'est pas encore implémentée."
      # source "$DIR_LIBS/stuff.rc"
      # _it_std_message "INFO" "STUFF : rangement..."
      # _it_stuff_tidy "$@"
    ;;

    #---------------------------------------------------------------------------
    # Meta-commandes ON/OFF
    #---------------------------------------------------------------------------
    onOLD)
      cat /opt/inist-tools/conf/servicesOn | parallel --gnu --no-notice /opt/inist-tools/inistexec {} on
    ;;

    offOLD)
      cat /opt/inist-tools/conf/servicesOff | parallel --gnu --no-notice /opt/inist-tools/inistexec {} off
    ;;
    
    on )
      _it_std_consoleMessage "TITLE" "Basculement de toutes les applications pour utiliser le proxy INIST..."
      inist shell on
      inist "$DESKTOPSESSION" on
      inist apt on
      inist docker on
      inist github on
      inist npm on
      inist bower on
      inist curl on
      inist wget on
    ;;
    
    off )
      _it_std_consoleMessage "TITLE" "Désactivation du proxy INIST pour toutes les applications..."
      inist shell off
      inist "$DESKTOPSESSION" off
      inist apt off
      inist docker off
      inist github off
      inist npm off
      inist bower off
      inist curl off
      inist wget off
    ;;

    #---------------------------------------------------------------------------
    # time|date|sync
    #---------------------------------------------------------------------------
    ntp )
      case $2 in
      
        # Synchro avec serveur ntp de l'INIST
        sync )
          _it_std_consoleMessage "INFO" "Synchronisation de la date/heure..."
          $SUDO "/opt/inist-tools/tools/timesync.sh"
          _it_std_consoleMessage "OK" "Heure synchronisée"
          return $TRUE
        ;;
        
        * )
          _it_std_consoleMessage "AIDE" "« inist ntp sync » pour synchroniser votre machine avec le serveur NTP de l'INIST"
        ;;
        
      esac
    ;;

    #---------------------------------------------------------------------------
    # daemon
    #---------------------------------------------------------------------------
    -d | --daemon )
      # source "/opt/inist-tools/libs/daemon.rc"
      # ToDo...
    ;;

    #---------------------------------------------------------------------------
    # gource
    #---------------------------------------------------------------------------
    gource)
      source "/opt/inist-tools/libs/gource.rc"
      _it_gource "$2"
    ;;
    
    #---------------------------------------------------------------------------
    # Choix du proxy
    #---------------------------------------------------------------------------
    --proxy=adsl | --proxy=ADSL)
      _it_std_setEnv "it_proxy" "ADSL"
      IT_PROXY="$PROXY_ADSL"
      _it_std_consoleMessage "WARNING" "N'oubliez pas de faire inist off puis inist on pour activer l'usage du proxy ADSL"
    ;;
    
    --proxy=inist | --proxy=INIST)
      _it_std_setEnv "it_proxy" "INIST"
      IT_PROXY="$PROXY_INIST"
      _it_std_consoleMessage "WARNING" "N'oubliez pas de faire inist off puis inist on pour activer l'usage du proxy INIST"
    ;;
    
    --proxy)
      IT_PROXY=$(_it_std_getEnv "it_proxy")
      if [ $IT_PROXY == -1 ]; then
        _it_std_setEnv "it_proxy" "INIST"
        IT_PROXY="$PROXY_INIST"
      fi
      _it_std_consoleMessage "INFO" "Choix courant de proxy : $IT_PROXY"
    ;;
    
    #---------------------------------------------------------------------------
    # power
    #---------------------------------------------------------------------------
    power )
      case "$2" in
        
        save )
          $SUDO "/opt/inist-tools/tools/powersave.sh"
          return $TRUE
        ;;

        auto )
          $SUDO "/opt/inist-tools/tools/powerondemand.sh"
          return $TRUE
        ;;
        
        max )
          $SUDO "/opt/inist-tools/tools/powermax.sh"
          return $TRUE
        ;;
        
        *)
          _it_std_consoleMessage "WARNING" "L'option « $3 » n'est pas reconnue pour la commande « power »"
          return $FALSE
        ;;
        
      esac
    ;;
    
    powersave )
      $SUDO "/opt/inist-tools/tools/powersave.sh"
      return $TRUE
    ;;

    powerauto )
      $SUDO "/opt/inist-tools/tools/powerondemand.sh"
      return $TRUE
    ;;
    
    powermax )
      SUDO "/opt/inist-tools/tools/powermax.sh"
      return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # update
    #---------------------------------------------------------------------------
    update )
      $SUDO "/opt/inist-tools/tools/inist-tools-update.sh"
      inist -r
    ;;
    
    #---------------------------------------------------------------------------
    # reload
    #---------------------------------------------------------------------------
    -r | --reload )
      _it_std_consoleMessage "INFO" "Rechargement de INIST-TOOLS"
      source /opt/inist-tools/inistrc
      _it_std_consoleMessage "INFO" "INIST-TOOLS [$MODULE_VERSION] rechargé"
      return $TRUE
    ;;
    
    #---------------------------------------------------------------------------
    # status
    #---------------------------------------------------------------------------
    -s | --status | st | status )
      _it_std_consoleMessage "TITLE" "Informations sur l'environnement..."
      inist shell status
      inist "$DESKTOPSESSION" status
      inist apt status
      inist docker status
      inist github status
      inist npm status
      inist bower status
      inist curl status
      inist wget status
      if [ -f /etc/postfix/main.cf ]; then
        inist postfix status
      fi
      _it_std_consoleMessage "INFO" "Proxy courant : $IT_PROXY"
      # source /opt/inist-tools/libs/misc.rc
      # _it_misc_proxyStatus
      # return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # AIDE -- OPTION : -h | --help
    #---------------------------------------------------------------------------
    -h | --help )
      _it_std_show_help
      return $TRUE
    ;;
    
    #---------------------------------------------------------------------------
    # OPTION : --pid
    #---------------------------------------------------------------------------
    --pid )
      echo "$PID"
      return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # OPTION : --version
    #---------------------------------------------------------------------------
    -v | --version )
      cat "$DIR_LIBS/gfx/cnrs.ansi"
      _it_std_show_version
      return $TRUE
    ;;

    #---------------------------------------------------------------------------
    # Options non gérées...
    #---------------------------------------------------------------------------
    * )
      _it_std_consoleMessage "WARNING" "Commande ou option « $1 » inconnue (ou peut-être mal saisie)."
    ;;
    
  esac
}

#-------------------------------------------------------------------------------
# Si la variable d'env it_env_isProxy est positionnée, on répercute son état
#-------------------------------------------------------------------------------
isSystemProxy=$(_it_std_getEnv "shell")
if [ "$isSystemProxy" == $TRUE ]; then
  source "$DIR_LIBS/inist-proxy.rc"
  _it_inistProxy "defaultOn"
elif [ "$isSystemProxy" == $FALSE ]; then
  source "$DIR_LIBS/inist-proxy.rc"
  _it_inistProxy "defaultOff"
else
  # "on" par défaut...
  source "$DIR_LIBS/inist-proxy.rc"
  _it_inistProxy "defaultOn"
  # _it_std_consoleMessage "WARNING" "Variable d'environnement vide ou contenant une valeur incohérente ($isSystemProxy)."
fi

#-------------------------------------------------------------------------------
# Liste des services actifs
#-------------------------------------------------------------------------------
ACTIVE_SERVICES=''
for service in shell "$DESKTOPSESSION" apt docker github npm bower curl wget 
do
  isActive=$(_it_std_getEnv "$service")
  if [ "$isActive" == $TRUE ]; then
    ACTIVE_SERVICES="$ACTIVE_SERVICES ${FG_BR_GREEN}✔ ${RESET_ALL}$service"
  fi
done

if [ ! -z "$ACTIVE_SERVICES" ]; then
  _it_std_consoleMessage "INFO" "Services INIST actifs : $ACTIVE_SERVICES"
  _it_std_consoleMessage "INFO" "Proxy courant : $IT_PROXY"
fi

#-------------------------------------------------------------------------------
# FIN !
# /!\ NE PAS METTRE D'EXIT #
#-------------------------------------------------------------------------------
