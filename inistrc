################################################################################
#
#   # #   # #  ###  #####     #####  ###   ###  #     ###
#   # ##  # # #       #         #   #   # #   # #    #
#   # # # # #  ###    #   ###   #   #   # #   # #     ### 
#   # #  ## #     #   #         #   #   # #   # #        #
#   # #   # #  ###    #         #    ###   ###  ##### ###
#
# Fichier à sourcer dans l'environnement de travail pour avoir accès aux
# outils « inist-tools ».
#
# @author : INIST-CNRS/DPI
#
################################################################################

#-------------------------------------------------------------------------------
# Environnement
#-------------------------------------------------------------------------------
export PATH="$PATH:/opt/inist-tools"
PID="$$"
PARENT_COMMAND="$(ps -o comm= $PPID)"
MODULE_NAME="INIST-TOOLS"
DIR_MODULE="/opt/inist-tools" # fixé "en dur" en fonction du chemin définitif
DIR_CONF="$DIR_MODULE/conf"
DIR_LIBS="$DIR_MODULE/libs"
DIR_TOOLS="$DIR_MODULE/tools"
DIR_INSTALL="$DIR_MODULE/install"

# Version en fonction du mode DEV ou DEB
CURDIR=$( cd "$( dirname "$0" )" && pwd )
DIR_IT=$(readlink -f "$CURDIR")
if [ -d "$DIR_IT/.git" ]; then
  MODULE_VERSION=$(cd "$DIR_IT" && git describe --tags)
  MODULE_VERSION_SHORT=$(cd "$DIR_IT" && git describe --tags | cut -d"-" -f1)
elif [ -d "$DIR_MODULE/.git" ]; then
  MODULE_VERSION=$(cd "$DIR_MODULE" && git describe --tags)
  MODULE_VERSION_SHORT=$(cd "$DIR_MODULE" && git describe --tags | cut -d"-" -f1)
elif [ -f "$DIR_MODULE/.version" ]; then
  MODULE_VERSION=$(cat "$DIR_MODULE/.version")
  MODULE_VERSION_SHORT="$MODULE_VERSION"
else
  MODULE_VERSION="inconnue"
  MODULE_VERSION_SHORT="inconnue"
fi

# Détermination du système sur lequel on se trouve...
is_debian=$(cat /etc/issue | grep -i "debian")
is_ubuntu=$(cat /etc/issue | grep -i "ubuntu")

if [ "$is_debian" ]; then
  HOST_SYSTEM="debian"
elif [ "$is_ubuntu" ]; then
  HOST_SYSTEM="ubuntu"
else
  HOST_SYSTEM="autre"
fi
# ...et de sa version précise
HOST_SYSTEM_VERSION=$(uname -mrs)

#-------------------------------------------------------------------------------
# COMMANDE [+option[s]]
#-------------------------------------------------------------------------------

function inist {

  #-----------------------------------------------------------------------------
  # Chargement libs + conf
  #-----------------------------------------------------------------------------
  if [ -f "$DIR_LIBS/std.rc" ]; then
    # source "$DIR_LIBS/ansicolors.lib.sh"
    source "$DIR_LIBS/ansicolors.rc"
    source "$DIR_LIBS/std.rc"
  else
    logger -s "[$MODULE_NAME] [ERROR] Impossible de charger la librairie de $MODULE_NAME depuis « $DIR_LIBS ». Fin."
    exit 1
  fi

  if [ -f "$DIR_CONF/inist.conf.sh" ]; then
    source "$DIR_CONF/inist.conf.sh"
  else
    logger -s "[$MODULE_NAME] [ERROR] Impossible de charger la configuration de $MODULE_NAME depuis « $DIR_LIBS ». Fin."
    exit 1
  fi

  #-----------------------------------------------------------------------------
  # Vérification des dépendances
  #-----------------------------------------------------------------------------
  if ! _it_std_check_command "find" ; then
    _it_std_message "ERROR" "« find » non trouvé, veuillez l'installer avant de continuer."
    exit 1
  fi

  #-----------------------------------------------------------------------------
  # Gestion des arguments 
  #-----------------------------------------------------------------------------
  # Aucun argument : affichage de l'aide
  if [ "$#" -lt 1 ]; then
    _it_std_greeting
    _it_std_message "WARNING" "Nombre d'argument incorrect !"
    _it_std_show_help
  fi

  # On est poli, on dit bonjour...
  _it_std_greeting
  
  # ligne commande = arguments de la fonction
  case $1 in

    #---------------------------------------------------------------------------
    # COMMANDE : info
    #---------------------------------------------------------------------------
    info )
      # On charge la lib "network"
      source "$DIR_LIBS/network.lib.sh"
      #
      _it_network_info
    ;;

    #---------------------------------------------------------------------------
    # COMMANDE : proxy
    #---------------------------------------------------------------------------
    proxy )

      # $2 qui vaut on|off|help est directement passé à la fonction qui va 
      # le gérer

      case "$3" in
        # inist proxy on --firefox (ou --iceweasel)
        --firefox )
          source "$DIR_LIBS/browsers.rc"
          _it_browsers_firefox_proxy "$2"
        ;;

        --iceweasel )
          source "$DIR_LIBS/browsers.rc"
          _it_browsers_iceweasel_proxy "$2"
        ;;
        
        # inist proxy off --chrome (ou --chromium)
        --chrome )
          source "$DIR_LIBS/browsers.rc"
          _it_browsers_chrome_proxy "$2"
        ;;

        --chromium )
          source "$DIR_LIBS/browsers.rc"
          _it_browsers_chromium_proxy "$2"
        ;;

        --xfce )
          source "$DIR_LIBS/desktop.rc"
          _it_dektop_xfce4_proxy "$2"
        ;;

        --gnome )
          source "$DIR_LIBS/desktop.rc"
          _it_dektop_gnome_proxy "$2"
        ;;

        --unity )
          source "$DIR_LIBS/desktop.rc"
          _it_dektop_unity_proxy "$2"
        ;;

        --kde )
          source "$DIR_LIBS/desktop.rc"
          _it_dektop_kde_proxy "$2"
        ;;

        --apt )
          source "$DIR_LIBS/misc.rc"
          _it_misc_apt_proxy "$2"
        ;;

        --npm )
          source "$DIR_LIBS/misc.rc"
          _it_misc_npm_proxy "$2"
        ;;

        # Cas par défaut (application à tout le système)
        # On gère la commande sous forme « inist proxy [on|off] »
        # et par défaut (inist proxy) -> "on"
        *)
          case "$2" in
            on)
              _it_std_message "INFO" "Positionnement des variables d'environnement pour le proxy INIST"
              source "$DIR_LIBS/inist-proxy.rc"
              _it_inistProxy "$2"
            ;;
            off)
              _it_std_message "INFO" "Suppression des variables d'environnement pour le proxy INIST"
              source "$DIR_LIBS/inist-proxy.rc"
              _it_inistProxy "$2"
            ;;
            *)
              _it_std_message "INFO" "Positionnement des variables d'environnement pour le proxy INIST"
              source "$DIR_LIBS/inist-proxy.rc"
              _it_inistProxy "on"
            ;;
          esac
        ;;
      esac

    ;; # FIN CASE « proxy »

    #---------------------------------------------------------------------------
    # ON (alias inist proxy on)
    #---------------------------------------------------------------------------
    on )
      inist proxy on
    ;;

    #---------------------------------------------------------------------------
    # OFF (alias inist proxy off)
    #---------------------------------------------------------------------------
    off )
      inist proxy off
    ;;

    #---------------------------------------------------------------------------
    # stuff : ranger automatiquement les trucs qui traînent avec un simple
    #         drag-&-drop sur une icône du bureau qui sert de raccourci à
    #         la commande « inist stuff »
    #---------------------------------------------------------------------------
    stuff )
      source "$DIR_LIBS/stuff.rc"
      _it_std_message "INFO" "STUFF : rangement..."
      _it_stuff_tidy "$@"
    ;;

    #---------------------------------------------------------------------------
    # time|date|sync
    #---------------------------------------------------------------------------
    time|date|sync )
      _it_std_consoleMessage "INFO" "Synchronisation de la date/heure..."
      sudo "/opt/inist-tools/tools/timesync.sh"
      _it_std_consoleMessage "OK" "Heure synchronisée"
    ;;

    #---------------------------------------------------------------------------
    # reload
    #---------------------------------------------------------------------------
    reload )
      _it_std_consoleMessage "INFO" "Rechargement de INIST-TOOLS"
      source /opt/inist-tools/inistrc
      _it_std_consoleMessage "INFO" "INIST-TOOLS [$MODULE_VERSION] rechargé"
    ;;

    #---------------------------------------------------------------------------
    # OPTION : --pid
    #---------------------------------------------------------------------------
    --pid )
      echo "$PID"
    ;;

    #---------------------------------------------------------------------------
    # OPTION : --version
    #---------------------------------------------------------------------------
    --version | -v )
      cat "$DIR_LIBS/gfx/cnrs.ansi"
      _it_std_show_version
    ;;

    #---------------------------------------------------------------------------
    # Options non gérées...
    #---------------------------------------------------------------------------

    * )
      _it_std_show_help
    ;;
    
  esac
}


#-------------------------------------------------------------------------------
# Pour pouvoir en faire un usage standalone, on appelle la fonction inist()
# en lui passant tous les arguments reçus
#-------------------------------------------------------------------------------
# inist "$@"

